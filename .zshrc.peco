# peco
if (( ! $+commands[tac] )); then
  alias tac='tail -r'
fi

p() {
  peco | while read LINE; do $@ $LINE; done
}

peco-find() {
  local FILE=$(find * -path '*/\.*' -prune -o -type f -print -o -type l -print 2> /dev/null | peco)
  BUFFER="$LBUFFER$FILE$RBUFFER"
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N peco-find
bindkey "^X^F" peco-find

peco-jump-dir() {
  local DIR=${BUFFER#cd }
  local DEST=$(find -E ${DIR:-.} -regex '.*\.(git|svn).*' -prune -o -type d 2> /dev/null | peco)
  if [ -n $DEST ]; then
    BUFFER="cd $DEST"
    zle accept-line
  fi
  zle -R -c
}
zle -N peco-jump-dir
bindkey "^X^J" peco-jump-dir

peco-kill() {
  ps -ef | sed 1d | peco | awk '{print $2}' | xargs kill -${1:-9}
}
zle -N peco-kill
bindkey "^X^K" peco-kill

peco-change-dir() {
  local DEST=$(_z -l "$LBUFFER" 2>&1 | awk '{ print $2 }' | tac | peco)
  if [ -n "$DEST" ]; then
    BUFFER="cd $DEST"
    zle accept-line
  fi
  #zle reset-prompt
  #zle clear-screen
  zle -R -c
}
zle -N peco-change-dir
bindkey "^X^Z" peco-change-dir

peco-select-history() {
  BUFFER=$(fc -l -n 1 | tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N peco-select-history
bindkey '^X^R' peco-select-history
bindkey '^R' peco-select-history

peco-src() {
  local SELECTED_DIR=$(ghq list --full-path | peco --query "$LBUFFER")
  if [ -n "$SELECTED_DIR" ]; then
    BUFFER="cd $SELECTED_DIR"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^G' peco-src

peco-writeback() {
    BUFFER=$(eval "$LBUFFER" | peco)
    CURSOR=$#BUFFER
    zle -R -c
}
zle -N peco-writeback
bindkey '^X^X' peco-writeback

peco-launchctl() {
  if (( ! $+commands[launchctl] )); then
    return
  fi

  local SERVICE_NAME=$(launchctl list 2>&1 | awk '{print $3}' \
                    | peco --prompt='Service>' --query "$LBUFFER")
  if [ -z "$SERVICE_NAME" ]; then
    return 1
  fi

  local -a ACTIONS
  ACTIONS=(start stop restart reload)
  local ACTION=$(echo -n "${(j:\n:)ACTIONS}" | peco --prompt='Action>')
  if [ -z "$ACTION" ]; then
    return 1
  fi

  BUFFER="launchctl $ACTION $SERVICE_NAME"
  zle accept-line
}
zle -N peco-launchctl
bindkey '^X^L' peco-launchctl

peco-ssh-host() {
  local HOST=$(grep -iE '^host[[:space:]]+[^*]' ~/.ssh/config | awk '{print $2}' | peco)
  BUFFER="$LBUFFER$HOST$RBUFFER"
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N peco-ssh-host
bindkey '^X^S' peco-ssh-host

