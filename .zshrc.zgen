# z
_Z_CMD=j
_Z_DATA=~/.z/.z

# bindkey
bindkey '^xr' anyframe-widget-execute-history
bindkey '^x^r' anyframe-widget-execute-history

bindkey '^r' anyframe-widget-put-history

bindkey '^g' anyframe-widget-cd-ghq-repository

bindkey '^xk' anyframe-widget-kill
bindkey '^x^k' anyframe-widget-kill

bindkey '^xb' anyframe-widget-checkout-git-branch
bindkey '^x^b' anyframe-widget-checkout-git-branch

bindkey '^xe' emoji::cli
bindkey '^x^e' emoji::cli

bindkey "^xj" peco-jump-dir
bindkey "^x^j" peco-jump-dir

bindkey "^xf" peco-find
bindkey "^x^f" peco-find

bindkey '^xs' peco-ssh-host
bindkey '^x^s' peco-ssh-host

# load zgen
. $GOPATH/src/github.com/tarjoilija/zgen/zgen.zsh

# load plugins
if ! zgen saved; then
  zgen load zsh-users/zsh-completions
  zgen load b4b4r07/auto-fu.zsh
  zgen load mollifier/anyframe
  zgen load rupa/z
  zgen load mafredri/zsh-async
  zgen load sindresorhus/pure
  zgen load b4b4r07/emoji-cli
  zgen load zsh-users/zsh-syntax-highlighting
fi

peco-jump-dir() {
  local DIR=${BUFFER#cd }
  find -E ${DIR:-.} -type d -a ! -regex '.*.(git|svn)/.*' -a ! -name '.' 2> /dev/null \
    | anyframe-selector-peco \
    | anyframe-action-execute cd
}
zle -N peco-jump-dir

peco-find() {
  find * -path '*/\.*' -prune -o -type f -print -o -type l -print 2> /dev/null \
    | anyframe-selector-peco \
    | anyframe-action-insert
}
zle -N peco-find

peco-ssh-host() {
  grep -iE '^host[[:space:]]+[^*]' ~/.ssh/config \
    | awk '{print $2}' \
    | anyframe-selector-peco \
    | anyframe-action-insert
}
zle -N peco-ssh-host


# zsh-completions
compdef mosh=ssh

# auto-fu
function zle-line-init () {
    auto-fu-init
}
zle -N zle-line-init

# afu+cancel
function afu+cancel () {
    afu-clearing-maybe
    ((afu_in_p == 1)) && { afu_in_p=0; BUFFER="$buffer_cur"; }
}

function bindkey-advice-before () {
    local key="$1"
    local advice="$2"
    local widget="$3"
    [[ -z "$widget" ]] && {
        local -a bind
        bind=(`bindkey -M main "$key"`)
        widget=$bind[2]
    }
    local fun="$advice"
    if [[ "$widget" != "undefined-key" ]]; then
        local code=${"$(<=(cat <<"EOT"
            function $advice-$widget () {
                zle $advice
                zle $widget
            }
            fun="$advice-$widget"
EOT
        ))"}
        eval "${${${code//\$widget/$widget}//\$key/$key}//\$advice/$advice}"
    fi
    zle -N "$fun"
    bindkey -M afu "$key" "$fun"
}
zstyle ':completion:*' completer _oldlist _complete
zstyle ':auto-fu:var' postdisplay ''
bindkey-advice-before "^[" afu+cancel
